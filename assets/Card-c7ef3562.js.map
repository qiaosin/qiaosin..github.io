{"version":3,"file":"Card-c7ef3562.js","sources":["../../src/views/main/story/apis.ts","../../src/views/main/story/context.ts","../../src/components/story/StoryDetail.vue","../../src/components/story/Card.vue"],"sourcesContent":["import { Story } from './type.js'\nimport instance from '@/api'\n\nexport class StoryApi {\n  static async getOne(params: { id: string }): Promise<Story> {\n\n    const res = await instance.get(`/story/${params.id}`)\n\n    console.log('getOne', params.id)\n    return res.data\n  }\n\n\n  static async getList(): Promise<Array<Omit<Story, 'content' | 'prompt' | 'rules'>>> {\n    const res = await instance.get('/story/home')\n    console.log('getList', res)\n\n    return res.data.storys\n  }\n\n}\n\n","import { InjectionKey, Ref,inject } from \"vue\";\n\nexport type StoryContext = {\n    activeKeyRef: Ref<number>\n    handleUpdateActiveKey: (key: number) => void\n}\n\nexport const StoryContextKey: InjectionKey<StoryContext> = Symbol('StoryContext')\n\nexport const useStoryContext = () => {\n    const context = inject(StoryContextKey)\n    if (context) {\n        return context\n    } else {\n        throw new Error('no story context')\n    }\n}","<script lang=\"ts\" setup>\nimport { computed, watch, ref } from 'vue'\nimport { StoryApi } from '../../views/main/story/apis'\nimport { Story } from '../../views/main/story/type'\nimport { useStoryContext } from '@/views/main/story/context';\n\nconst props = defineProps<{\n  dialogVisible: boolean\n  storyId: string\n  handleClose: () => void\n}>()\n\nconst dialogVisible = computed(() => props.dialogVisible)\n\nconst stroyDetail = ref<Story>()\n\nconst handleCancel = () => {\n  props.handleClose()\n}\n\nconst editable = ref(false)\n\n\nconst handleEdit = () => {\n  editable.value = true\n}\n\nwatch(dialogVisible,async (visible)=>{\n  if(visible){\n stroyDetail.value = await StoryApi.getOne({ id: props.storyId })\n\n  }\n})\n\n\n\nconst handleUpdate = (v: any) => {\n  stroyDetail.value = v\n}\n\nconst { handleUpdateActiveKey }  = useStoryContext()\n\nconst handleContinue = () =>{\n  handleUpdateActiveKey(1)\n\n}\n\n</script>\n<template>\n  <el-dialog  align-center :show-close=false v-model=\"dialogVisible\" :before-close=\"props.handleClose\" width=\"80vw\"\n    class=\"dialog-class\" v-if=\"stroyDetail\">\n    <div class=\"content\" v-if=\"!editable\">\n      <div>\n        <el-button @click=\"handleCancel\" color=\"#FE8623\">Cancel</el-button>\n        <!-- 暂时不开放编辑\n        <el-button @click=\"handleEdit\" color=\"#FE8623\"> Edit</el-button> -->\n        <el-button color=\"#FE8623\" @click=\"handleContinue\">Continue</el-button>\n      </div>\n      <span>{{ stroyDetail.title }}</span>\n      <span><span>summary:</span> {{ stroyDetail.summary }}</span>\n      <span><span>content:</span> {{ stroyDetail.content }}</span>\n      <span><span>role:</span> <span v-for=\" r in stroyDetail.rules\">\n          <span>{{ r }}</span>\n        </span></span>\n    </div>\n    <!-- <StoryEdit v-if=\"editable\" :story=\"stroyDetail\" :handle-update=\"handleUpdate\" /> -->\n\n  </el-dialog>\n</template>\n\n<style lang=\"scss\" scoped>\n.content {\n  display: flex;\n  flex-direction: column;\n  justify-items: center;\n  align-items: start;\n  color: var(--primary-text-color);\n  height: 100%;\n  overflow-y: hidden;\n\n  > :nth-child(2) {\n    width: 100%;\n    padding: 19px 0 17px 0;\n    font-size: 18px;\n    font-weight: 400;\n    text-align: center;\n  }\n\n  > :nth-child(3),\n  > :nth-child(4),\n  > :nth-child(5) {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    margin-bottom: 35px;\n    font-size: 13px;\n    font-weight: 400;\n  }\n}\n</style>\n","<script lang=\"ts\" setup>\nimport { ref } from 'vue'\nimport StoryDetail from '@/components/story/StoryDetail.vue'\n\nconst props = defineProps<{\n  id:string,\n  title: string\n  content: string,\n}>()\nconst handleClick = () => {\n  dialogVisible.value = true\n}\nconst handleClose = () => {\n  dialogVisible.value = false\n}\nconst dialogVisible = ref(false)\n</script>\n<template>\n  <StoryDetail :story-id=\"props.id\" :dialog-visible=\"dialogVisible\" :handle-close=\"handleClose\" />\n  <div class=\"card\" @click=\"handleClick\">\n    <span>{{ props.title }}</span>\n    <span>{{ props.content }}</span>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n.card {\n  width: 30%;\n  height: 189px;\n  border: 1px solid var(--primary-color);\n  color: var(--primary-text-color);\n  border-radius: 5px;\n  padding: 8px 3px;\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  font-size: 13px;\n  :first-child {\n    font-size: 15px;\n    line-height: 21px;\n  }\n}\n</style>\n"],"names":["StoryApi","params","res","instance","StoryContextKey","useStoryContext","context","inject","props","__props","dialogVisible","computed","stroyDetail","ref","handleCancel","editable","watch","visible","handleUpdateActiveKey","handleContinue","handleClick","handleClose"],"mappings":"kQAGO,MAAMA,CAAS,CACpB,aAAa,OAAOC,EAAwC,CAE1D,MAAMC,EAAM,MAAMC,EAAS,IAAI,UAAUF,EAAO,EAAE,EAAE,EAE5C,eAAA,IAAI,SAAUA,EAAO,EAAE,EACxBC,EAAI,IACb,CAGA,aAAa,SAAuE,CAClF,MAAMA,EAAM,MAAMC,EAAS,IAAI,aAAa,EACpC,eAAA,IAAI,UAAWD,CAAG,EAEnBA,EAAI,KAAK,MAClB,CAEF,CCba,MAAAE,EAA8C,OAAO,cAAc,EAEnEC,EAAkB,IAAM,CAC3B,MAAAC,EAAUC,EAAOH,CAAe,EACtC,GAAIE,EACO,OAAAA,EAED,MAAA,IAAI,MAAM,kBAAkB,CAE1C,kSCVA,MAAAE,EAAAC,EAMAC,EAAAC,EAAA,IAAAH,EAAA,aAAA,EAEAI,EAAAC,IAEAC,EAAA,IAAA,CACEN,EAAA,YAAA,CAAkB,EAGpBO,EAAAF,EAAA,EAAA,EAOAG,EAAAN,EAAA,MAAAO,GAAA,CACEA,IACDL,EAAA,MAAA,MAAAZ,EAAA,OAAA,CAAA,GAAAQ,EAAA,OAAA,CAAA,EAEC,CAAA,EASF,KAAA,CAAA,sBAAAU,GAAAb,IAEAc,EAAA,IAAA,CACED,EAAA,CAAA,CAAuB,i0BCvCzB,MAAAV,EAAAC,EAKAW,EAAA,IAAA,CACEV,EAAA,MAAA,EAAsB,EAExBW,EAAA,IAAA,CACEX,EAAA,MAAA,EAAsB,EAExBA,EAAAG,EAAA,EAAA"}